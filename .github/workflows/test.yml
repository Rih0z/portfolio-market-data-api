name: テスト自動化ワークフロー

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: テスト実行
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
    - name: リポジトリのチェックアウト
      uses: actions/checkout@v3
    
    - name: Node.js ${{ matrix.node-version }} のセットアップ
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: DynamoDB Localのセットアップ
      run: |
        mkdir -p ./dynamodb-local
        curl -L -o ./dynamodb-local/dynamodb-local-latest.tar.gz https://d1ni2b6xgvw0s0.cloudfront.net/dynamodb_local_latest.tar.gz
        tar -xzf ./dynamodb-local/dynamodb-local-latest.tar.gz -C ./dynamodb-local
        java -version
    
    - name: 依存関係のインストール
      run: npm ci
    
    - name: 単体テスト実行
      run: npm run test:unit
      env:
        NODE_ENV: test
        CI: true
        COLLECT_COVERAGE: true
    
    - name: 統合テスト実行
      run: npm run test:integration
      env:
        NODE_ENV: test
        CI: true
        COLLECT_COVERAGE: true
    
    - name: E2Eテスト実行（モック使用）
      run: npm run test:e2e
      env:
        NODE_ENV: test
        CI: true
        USE_API_MOCKS: true
        COLLECT_COVERAGE: true
    
    - name: カバレッジレポートのアップロード
      uses: codecov/codecov-action@v3
      with:
        directory: ./coverage
    
    - name: テスト結果のアップロード
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: ./test-results
        retention-days: 30

  build:
    name: ビルドテスト
    runs-on: ubuntu-latest
    needs: test
    if: success()
    
    steps:
    - name: リポジトリのチェックアウト
      uses: actions/checkout@v3
    
    - name: Node.js のセットアップ
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: 依存関係のインストール
      run: npm ci
    
    - name: ビルド実行
      run: npm run build
      env:
        NODE_ENV: production
    
    - name: ビルド成果物のアップロード
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: ./dist
        retention-days: 7

  deploy-dev:
    name: 開発環境へのデプロイ
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/develop' && success()
    
    steps:
    - name: リポジトリのチェックアウト
      uses: actions/checkout@v3
    
    - name: ビルド成果物のダウンロード
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: ./dist
    
    - name: AWS 認証情報の設定
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1
    
    - name: 開発環境へのデプロイ
      run: npm run deploy:dev
      env:
        NODE_ENV: development
